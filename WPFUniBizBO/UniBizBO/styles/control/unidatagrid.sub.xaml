<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behaviors="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:conv="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:wpf="clr-namespace:UniinfoNet.Windows.Wpf;assembly=UniinfoNet.Windows.Wpf">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="ComboBox.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="MahApps.Styles.CheckBox.DataGrid" BasedOn="{StaticResource MahApps.Styles.CheckBox}"
         TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsReadOnly, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                   Value="True">
        <Setter Property="UIElement.Focusable" Value="False"/>
        <Setter Property="UIElement.IsHitTestVisible" Value="False"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsEditing, RelativeSource={RelativeSource AncestorType=DataGridCell}}"
                   Value="False">
        <Setter Property="UIElement.Focusable" Value="False"/>
        <Setter Property="UIElement.IsHitTestVisible" Value="False"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.ComboBox.DataGrid" BasedOn="{StaticResource MahApps.Styles.ComboBox}"
         TargetType="{x:Type ComboBox}">
    <Setter Property="Control.Foreground"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}, Path=Foreground, Mode=OneWay}"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="4,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                            IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
  </Style>
  <Style x:Key="App.ComboBox.UniDataGridComboBoxColumn" BasedOn="{StaticResource App.ComboBox}"
         TargetType="{x:Type ComboBox}">
    <Setter Property="Control.Foreground"
            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}, Path=Foreground, Mode=OneWay}"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="4,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                            IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
  </Style>
  <Style x:Key="MahApps.Styles.ComboBox.DataGrid.Editing"
         BasedOn="{StaticResource MahApps.Styles.ComboBox.Virtualized}" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="3,4"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0"/>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ComboBox.IsEditable" Value="False"/>
          <Condition Property="UIElement.IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Gray6}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="App.ComboBox.UniDataGridComboBoxColumn.Editing" BasedOn="{StaticResource App.ComboBox}"
         TargetType="{x:Type ComboBox}">
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="3,4"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0"/>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ComboBox.IsEditable" Value="False"/>
          <Condition Property="UIElement.IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Gray6}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MahApps.Styles.TextBlock.DataGrid" BasedOn="{StaticResource MahApps.Styles.TextBlock}"
         TargetType="{x:Type TextBlock}">
    <Setter Property="FrameworkElement.Margin" Value="4,0"/>
  </Style>
  <Style x:Key="MahApps.Styles.TextBox.DataGrid.Editing" BasedOn="{StaticResource MahApps.Styles.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="Control.Padding" Value="2,4"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0"/>
    <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>
  </Style>
  <Style x:Key="MahApps.Styles.Hyperlink.DataGrid" BasedOn="{StaticResource MahApps.Styles.TextBlock}"
         TargetType="{x:Type TextBlock}">
    <Style.Resources>
      <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="Inline.TextDecorations" Value="Underline"/>
        <Style.Triggers>
          <Trigger Property="ContentElement.IsMouseOver" Value="True">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="False">
            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="True">
            <Setter Property="FrameworkContentElement.Cursor" Value="Hand"/>
            <Setter Property="FrameworkContentElement.ForceCursor" Value="True"/>
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="FrameworkElement.Margin" Value="4,0"/>
  </Style>
  <Style x:Key="MahApps.Styles.NumericUpDown.DataGrid" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}"
         TargetType="{x:Type mah:NumericUpDown}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="mah:NumericUpDown.HideUpDownButtons" Value="True"/>
    <Setter Property="mah:NumericUpDown.InterceptArrowKeys" Value="True"/>
    <Setter Property="mah:NumericUpDown.InterceptMouseWheel" Value="True"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="mah:NumericUpDown.Speedup" Value="True"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="mah:ControlsHelper.CornerRadius" Value="0"/>
  </Style>
  <Style x:Key="MahApps.Styles.NumericUpDown.DataGrid.Editing"
         BasedOn="{StaticResource MahApps.Styles.NumericUpDown.DataGrid}"
         TargetType="{x:Type mah:NumericUpDown}">
    <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:NumericUpDown.HideUpDownButtons" Value="False"/>
  </Style>
  <Style x:Key="{ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
         TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle x:Name="Border" Fill="{DynamicResource MahApps.Brushes.Gray7}"/>
            <Polygon x:Name="Arrow" Margin="8,8,3,3" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                     Fill="{DynamicResource MahApps.Brushes.Gray1}" Opacity="0.15" Points="0,10 10,10 10,0"
                     Stretch="Uniform"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="Border" Value="{DynamicResource MahApps.Brushes.Accent2}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MahApps.Styles.Thumb.ColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Background"
            Value="{DynamicResource App.Brush.DataGrid.ColumnHeader.Gripper.Background}"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Margin="{TemplateBinding Control.Padding}" Background="Transparent"
                  BorderBrush="{TemplateBinding Control.Background}" BorderThickness="0,0,0,0"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Width" Value="8"/>
  </Style>
  <Style x:Key="MahApps.Styles.Thumb.RowHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Background"
            Value="{DynamicResource App.Brush.DataGrid.RowHeader.Gripper.Background}"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
    <Setter Property="FrameworkElement.Height" Value="6"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Margin="{TemplateBinding Control.Padding}" Background="Transparent"
                  BorderBrush="{TemplateBinding Control.Background}" BorderThickness="0,0,0,1"
                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="App.DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Control.Background" Value="{DynamicResource App.Brush.DataGrid.ColumnHeader.Background}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource App.Brush.DataGrid.ColumnHeader.Foreground}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource App.Brush.DataGrid.ColumnHeader.BorderBrush}"/>
    <Setter Property="Control.BorderThickness" Value="0,0,1,1"/>
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="28"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.Padding"
            Value="{Binding Path=(mah:DataGridHelper.ColumnHeaderPadding), FallbackValue=0, TargetNullValue=0, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="BackgroundBorder" Grid.ColumnSpan="2" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"/>
            <mah:ContentControlEx x:Name="HeaderContent" Grid.Column="0" Margin="{TemplateBinding Control.BorderThickness}"
                                  Padding="{TemplateBinding Control.Padding}"
                                  HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  Content="{TemplateBinding ContentControl.Content}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"/>
            <Path x:Name="SortArrow" Grid.Column="1" Width="8" Height="10" Margin="0,0,8,2"
                  VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}"
                  RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed"/>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Background="Transparent"
                   Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}"/>
            <Thumb x:Name="PART_RightHeaderGripper" Grid.Column="1" HorizontalAlignment="Right"
                   Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="Path.Data"
                      Value="F1 M 34,57 L 42,57 42,32.25 52,42.25 52,31.75 38,17.75 24,31.75 24,42.25 34,32.25 34,57 Z"/>
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="Path.Data"
                      Value="F1 M 42,19.0002 L 34,19.0002 34,43.7502 24,33.7502 24,44.2502 38,58.2502 52,44.2502 52,33.7502 42,43.7502 42,19.0002 Z"/>
              <Setter TargetName="SortArrow" Property="FrameworkElement.Margin" Value="0,0,8,0"/>
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="DataGridColumnHeader.DisplayIndex" Value="0">
              <Setter TargetName="PART_LeftHeaderGripper" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="True"/>
          <Condition Property="DataGridColumnHeader.SortDirection" Value="{x:Null}"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background"
                Value="{DynamicResource App.Brush.DataGrid.ColumnHeader.Background.PointerOver}"/>
      </MultiTrigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="App.DataGridColumnHeader.DataHeader" BasedOn="{StaticResource App.DataGridColumnHeader}"
         TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="FrameworkElement.ToolTip"
            Value="{Binding RelativeSource={RelativeSource self}, Path=Column.Header.Description}"/>
  </Style>
  <DataTemplate x:Key="_DataTemplate.DataGridColumnHeader">
    <TextBlock HorizontalAlignment="Left" Text="{Binding}"/>
  </DataTemplate>
  <DataTemplate x:Key="_DataTemplate.DataGridColumnHeader.Center">
    <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
  </DataTemplate>
  <DataTemplate x:Key="_DataTemplate.DataGridColumnHeader.Right">
    <TextBlock HorizontalAlignment="Right" Text="{Binding}"/>
  </DataTemplate>
  <Style x:Key="App.DataGridRowHeader.UniDataGrid" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource MahApps.Brushes.Gray5}"/>
    <Setter Property="Control.BorderThickness" Value="0,0,1,0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Border Margin="{TemplateBinding FrameworkElement.Margin}" Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="True">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <Control Grid.Column="1" Focusable="False" SnapsToDevicePixels="False"
                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                         Visibility="{Binding (Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
              </Grid>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Background="Transparent"
                   Style="{StaticResource MahApps.Styles.Thumb.RowHeaderGripper}"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"
                   Style="{StaticResource MahApps.Styles.Thumb.RowHeaderGripper}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="App.DataGridCell.UniDataGrid" TargetType="{x:Type DataGridCell}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Padding"
            Value="{Binding Path=(mah:DataGridHelper.CellPadding), FallbackValue=0, TargetNullValue=0, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
              <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <Border x:Name="PART_Overlay" Margin="{TemplateBinding Control.BorderThickness}" IsHitTestVisible="False"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="mah:DataGridHelper.SelectionUnit" Value="Cell"/>
                <Condition Property="DataGridCell.IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource App.Brush.DataGrid.DataGridCell.Background.Selected}"
                      Property="Control.Background"/>
              <Setter TargetName="PART_Overlay"
                      Value="{DynamicResource App.Brush.DataGrid.DataGridCell.BorderBrush.Selected}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_Overlay" Property="Border.BorderThickness" Value="1"/>
              <Setter Property="Panel.ZIndex" Value="100"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="mah:DataGridHelper.SelectionUnit" Value="CellOrRowHeader"/>
                <Condition Property="DataGridCell.IsSelected" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource App.Brush.DataGrid.DataGridCell.Background.Selected}"
                      Property="Control.Background"/>
              <Setter TargetName="PART_Overlay"
                      Value="{DynamicResource App.Brush.DataGrid.DataGridCell.BorderBrush.Selected}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_Overlay" Property="Border.BorderThickness" Value="1"/>
              <Setter Property="Panel.ZIndex" Value="100"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="mah:DataGridHelper.SelectionUnit"
            Value="{Binding Path=(mah:DataGridHelper.SelectionUnit), FallbackValue={x:Static DataGridSelectionUnit.FullRow}, TargetNullValue={x:Static DataGridSelectionUnit.FullRow}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True"/>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="mah:DataGridHelper.SelectionUnit" Value="Cell"/>
          <Condition Property="UIElement.IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background"
                Value="{DynamicResource App.Brush.DataGrid.DataGridCell.Background.PointerOver}"/>
        <Setter Property="Panel.ZIndex" Value="200"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="mah:DataGridHelper.SelectionUnit" Value="CellOrRowHeader"/>
          <Condition Property="UIElement.IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background"
                Value="{DynamicResource App.Brush.DataGrid.DataGridCell.Background.PointerOver}"/>
        <Setter Property="Panel.ZIndex" Value="200"/>
      </MultiTrigger>
      <Trigger Property="DataGridCell.IsSelected" Value="True">
        <Setter Property="Control.Foreground"
                Value="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Foreground}"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsEnabled" Value="False"/>
          <Condition Property="DataGridCell.IsSelected" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Foreground"
                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Disabled}"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="mah:DataGridHelper.SelectionUnit" Value="Cell"/>
          <Condition Property="UIElement.IsEnabled" Value="False"/>
          <Condition Property="DataGridCell.IsSelected" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background"
                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}"/>
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="mah:DataGridHelper.SelectionUnit" Value="CellOrRowHeader"/>
          <Condition Property="UIElement.IsEnabled" Value="False"/>
          <Condition Property="DataGridCell.IsSelected" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="Control.Background"
                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}"/>
        <Setter Property="Control.BorderBrush"
                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="MahApps.Templates.DataGridRow.ValidationError">
    <Grid Margin="2,0,2,0" VerticalAlignment="Center"
          DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)/}"
          ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.ErrorContent}">
      <Path Width="20" Height="20"
            Data="M 31.630585,39.233818 L 56.261485,14.603018 C 56.879785,13.984618 57.882285,13.984618 58.500685,14.603018 L 83.131485,39.233818 C 83.749885,39.852218 83.749885,40.854718 83.131485,41.473018 L 58.500685,66.103918 C 57.882385,66.722218 56.879785,66.722218 56.261485,66.103918 L 31.630585,41.473018 C 31.012285,40.854718 31.012285,39.852218 31.630585,39.233818 Z"
            Fill="{DynamicResource MahApps.Brushes.Control.Validation}" Stretch="Uniform"/>
      <Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center"
            Data="M 53.781741,31.196677 C 51.544017,31.196677 49.719241,33.021453 49.719241,35.259177 49.719241,37.496901 51.544017,39.321677 53.781741,39.321677 56.019465,39.321677 57.844241,37.496901 57.844241,35.259177 57.844241,33.021453 56.019465,31.196677 53.781741,31.196677 M 49.687991,9.821677 L 49.719241,10.352927 50.937991,29.821677 56.625491,29.821677 57.875491,9.821677 49.687991,9.821677 Z"
            Fill="{DynamicResource MahApps.Brushes.Text.Validation}" Stretch="Uniform"/>
    </Grid>
  </ControlTemplate>
</ResourceDictionary>