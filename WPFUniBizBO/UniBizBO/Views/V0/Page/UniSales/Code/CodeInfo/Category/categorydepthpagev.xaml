<UserControl x:Class="UniBizBO.Views.V0.Page.UniSales.Code.CodeInfo.Category.CategoryDepthPageV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:control="clr-namespace:UniBizBO.Controls"
             xmlns:control_combo="clr-namespace:UniBizBO.Controls.ComboBox"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ex="urn:controlzex"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:UniBizBO.Views.V0.Page.UniSales.Code.CodeInfo.Category"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:UniBizBO.Composition.Resource"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:wpf="clr-namespace:UniinfoNet.Windows.Wpf;assembly=UniinfoNet.Windows.Wpf"
             x:Name="root" Style="{StaticResource App.UserControl.Page.Default}">
  <FrameworkElement.Resources>
    <ResourceDictionary Source="pack://application:,,,/UniBizBO;component/Views/V0/Page/PageCommon.xaml"/>
  </FrameworkElement.Resources>
  <i:Interaction.Behaviors>
    <wpf:KeyCaptureBehavior Receiver="{Binding}"/>
  </i:Interaction.Behaviors>
  <Grid>
    <FrameworkElement.Resources>
      <wpf:BindingProxy x:Key="vm" Data="{Binding}"/>
    </FrameworkElement.Resources>
    <PopupEx FrameworkElement.Style="{StaticResource App.PopupEx.PopupMenu}"
             Popup.IsOpen="{Binding Source={StaticResource vm}, Path=Data.IsOpenExcelPopup}">
      <FrameworkElement.Resources>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
          <Setter Property="mah:VisibilityHelper.IsVisible"
                  Value="{Binding RelativeSource={RelativeSource self}, Path=Command.IsCanDisplay, FallbackValue=false}"/>
          <Setter Property="Control.Padding" Value="8"/>
          <Setter Property="Control.BorderThickness" Value="0"/>
        </Style>
      </FrameworkElement.Resources>
      <mah:ClipBorder Style="{StaticResource App.ClipBorder.PopupMenu.Space}">
        <StackPanel Orientation="Vertical">
          <Button CommandParameter="1" Command="{Binding CmdExportExcel}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_CategoryTop.FullPath}"/>
              <TextBlock Text="대분류 출력"/>
            </StackPanel>
          </Button>
          <Button CommandParameter="2" Command="{Binding CmdExportExcel}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_CategoryMid.FullPath}"/>
              <TextBlock Text="중분류 출력"/>
            </StackPanel>
          </Button>
          <Button CommandParameter="3" Command="{Binding CmdExportExcel}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_CategoryBot.FullPath}"/>
              <TextBlock Text="소분류 출력"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdDownloadExcelSample.IsCanDisplay}"/>
          <Button Command="{Binding CmdDownloadExcelSample}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_DownLoad.FullPath}"/>
              <TextBlock Text="샘플 다운로드"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdUploadExcelFile.IsCanDisplay}"/>
          <Button Command="{Binding CmdUploadExcelFile}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_UpLoad.FullPath}"/>
              <TextBlock Text="엑셀파일 업로드"/>
            </StackPanel>
          </Button>
        </StackPanel>
      </mah:ClipBorder>
    </PopupEx>
    <control:DataHeaderDebugControl Panel.ZIndex="100" DataContext="{Binding}"/>
    <wpf:OverlayLayout Style="{DynamicResource App.OverlayLayout.Job.Page}" OverlayContent="{Binding Job}">
      <DockPanel>
        <ui:SimpleStackPanel DockPanel.Dock="Top" Orientation="Horizontal">
          <control:PageTitleControl/>
          <Button Style="{StaticResource Page.Button.Close}"/>
        </ui:SimpleStackPanel>
        <Border>
          <DockPanel>
            <DockPanel Style="{StaticResource Page.DockPanel.Search}">
              <wpf:FoldableBox DockPanel.Dock="Top" ExpandsCount="5">
                <DockPanel>
                  <wpf:AutoGrid AutoColumnsString=",*,">
                    <control_combo:UseYnComboControl Width="80" wpf:FocusMoveHelper.Left="{Binding RelativeSource={RelativeSource self}}"
                                                     wpf:FocusMoveHelper.Right="{Binding ElementName=ctr_tb_keyword}" UseYn="{Binding Path=Param.Use}"/>
                    <TextBox x:Name="ctr_tb_keyword" mah:TextBoxHelper.SelectAllOnFocus="True"
                             mah:TextBoxHelper.Watermark="키워드:분류명,메모" wpf:FocusHelper.IsSetFocusWhenLoad="True"
                             Style="{DynamicResource App.TextBox.Search}"
                             wpf:FocusMoveHelper.Down="{Binding ElementName=ctr_grid_lv1}"
                             Text="{Binding Param.Keyword, UpdateSourceTrigger=PropertyChanged}">
                      <UIElement.InputBindings>
                        <KeyBinding Key="Return" CommandParameter="Search" Command="{Binding CmdDefaultFunc}"/>
                      </UIElement.InputBindings>
                    </TextBox>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Style="{DynamicResource App.TextBlock.Search.Label}" Text="기준일"/>
                      <DatePicker Style="{DynamicResource App.DatePicker.Search}" SelectedDate="{Binding Param.DtDate, Mode=TwoWay}"/>
                    </StackPanel>
                  </wpf:AutoGrid>
                </DockPanel>
              </wpf:FoldableBox>
              <TextBlock Margin="42,0,0,4" FontWeight="Bold" Text="{Binding DisplaySearchCountDesc}"/>
            </DockPanel>
            <Border>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="1*"/>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition Width="1*"/>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Margin="4" Background="Transparent" BorderBrush="Gray" BorderThickness="1">
                  <wpf:UniDataGrid x:Name="ctr_grid_lv1" AutoGenerateColumns="False" IsReadOnly="True"
                                   wpf:DataGridEventHelper.RowLeftDoubleClickCommand="{Binding CmdLvDataDbClick}"
                                   wpf:FocusMoveHelper.Down="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Left="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Right="{Binding ElementName=ctr_grid_lv2}"
                                   wpf:FocusMoveHelper.Up="{Binding ElementName=ctr_tb_keyword}" ItemsSource="{Binding Lv1Datas}">
                    <i:Interaction.Behaviors>
                      <wpf:UniDataGridViewerProxyBehavior Viewer="{Binding GridViewerLv1, Mode=OneWayToSource}"/>
                    </i:Interaction.Behaviors>
                    <FrameworkElement.Resources>
                      <Style x:Key="_Background" TargetType="{x:Type TextBlock}">
                        <Setter Property="FrameworkElement.Margin" Value="4,0"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding ctg_IsUse}" Value="false">
                            <Setter Property="TextBlock.TextDecorations" Value="Strikethrough"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </FrameworkElement.Resources>
                    <DataGrid.Columns>
                      <DataGridTemplateColumn Width="{StaticResource DataGridHeaderWidth.ctg_lv1_Name.Large}" SortMemberPath="ctg_lv1_Name"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv1_Name]}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv1_Name].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}">
                        <DataGridTemplateColumn.CellTemplate>
                          <DataTemplate>
                            <TextBlock Style="{StaticResource _Background}" Text="{Binding ctg_lv1_Name}"/>
                          </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                      </DataGridTemplateColumn>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.ctg_ViewCodeAll}"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Center}"
                                          Binding="{Binding ctg_lv1_ViewCode}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv1_ViewCode]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv1_ViewCode].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                    </DataGrid.Columns>
                  </wpf:UniDataGrid>
                </Border>
                <Border Grid.Column="2" Margin="4" Background="Transparent" BorderBrush="Gray" BorderThickness="1">
                  <wpf:UniDataGrid x:Name="ctr_grid_lv2" AutoGenerateColumns="False" IsReadOnly="True"
                                   wpf:DataGridEventHelper.RowLeftDoubleClickCommand="{Binding CmdLv2DataDbClick}"
                                   wpf:FocusMoveHelper.Down="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Left="{Binding ElementName=ctr_grid_lv1}"
                                   wpf:FocusMoveHelper.Right="{Binding ElementName=ctr_grid_lv3}"
                                   wpf:FocusMoveHelper.Up="{Binding ElementName=ctr_tb_keyword}"
                                   ItemsSource="{Binding ElementName=ctr_grid_lv1, Path=SelectedItem.Lt_Detail}">
                    <i:Interaction.Behaviors>
                      <wpf:UniDataGridViewerProxyBehavior Viewer="{Binding GridViewerLv2, Mode=OneWayToSource}"/>
                    </i:Interaction.Behaviors>
                    <FrameworkElement.Resources>
                      <Style x:Key="_Background" TargetType="{x:Type TextBlock}">
                        <Setter Property="FrameworkElement.Margin" Value="4,0"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding ctg_IsUse}" Value="false">
                            <Setter Property="TextBlock.TextDecorations" Value="Strikethrough"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </FrameworkElement.Resources>
                    <DataGrid.Columns>
                      <DataGridTemplateColumn Width="{StaticResource DataGridHeaderWidth.ctg_lv2_Name.Large}" SortMemberPath="ctg_lv2_Name"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv2_Name]}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv2_Name].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}">
                        <DataGridTemplateColumn.CellTemplate>
                          <DataTemplate>
                            <TextBlock Style="{StaticResource _Background}" Text="{Binding ctg_lv2_Name}"/>
                          </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                      </DataGridTemplateColumn>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.ctg_ViewCodeAll}"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Center}"
                                          Binding="{Binding ctg_lv2_ViewCode}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv2_ViewCode]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_lv2_ViewCode].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                    </DataGrid.Columns>
                  </wpf:UniDataGrid>
                </Border>
                <Border Grid.Column="4" Margin="4" Background="Transparent" BorderBrush="Gray" BorderThickness="1">
                  <wpf:UniDataGrid x:Name="ctr_grid_lv3" AutoGenerateColumns="False" CanUserEditGroupingView="False" IsReadOnly="True"
                                   wpf:DataGridEventHelper.RowLeftDoubleClickCommand="{Binding CmdLv3DataDbClick}"
                                   wpf:FocusMoveHelper.Down="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Left="{Binding ElementName=ctr_grid_lv2}"
                                   wpf:FocusMoveHelper.Right="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Up="{Binding ElementName=ctr_tb_keyword}"
                                   ItemsSource="{Binding ElementName=ctr_grid_lv2, Path=SelectedItem.Lt_Detail}">
                    <i:Interaction.Behaviors>
                      <wpf:UniDataGridViewerProxyBehavior Viewer="{Binding GridViewerLv3, Mode=OneWayToSource}"/>
                    </i:Interaction.Behaviors>
                    <FrameworkElement.Resources>
                      <Style x:Key="_Background" TargetType="{x:Type TextBlock}">
                        <Setter Property="FrameworkElement.Margin" Value="4,0"/>
                        <Style.Triggers>
                          <DataTrigger Binding="{Binding ctg_IsUse}" Value="false">
                            <Setter Property="TextBlock.TextDecorations" Value="Strikethrough"/>
                          </DataTrigger>
                        </Style.Triggers>
                      </Style>
                    </FrameworkElement.Resources>
                    <DataGrid.Columns>
                      <DataGridTemplateColumn Width="{StaticResource DataGridHeaderWidth.ctg_CategoryName.Large}"
                                              SortMemberPath="ctg_CategoryName"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_CategoryName]}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_CategoryName].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}">
                        <DataGridTemplateColumn.CellTemplate>
                          <DataTemplate>
                            <TextBlock Style="{StaticResource _Background}" Text="{Binding ctg_CategoryName}"/>
                          </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                      </DataGridTemplateColumn>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.ctg_ViewCodeAll}"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Center}" Binding="{Binding ctg_ViewCode}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_ViewCode]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[ctg_ViewCode].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                    </DataGrid.Columns>
                  </wpf:UniDataGrid>
                </Border>
              </Grid>
            </Border>
          </DockPanel>
        </Border>
      </DockPanel>
    </wpf:OverlayLayout>
  </Grid>
</UserControl>