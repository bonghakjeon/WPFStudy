<UserControl x:Class="UniBizBO.Views.V0.Page.UniSales.Code.CodeInfo.Brand.BrandListPageV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:control="clr-namespace:UniBizBO.Controls"
             xmlns:control_combo="clr-namespace:UniBizBO.Controls.ComboBox"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ex="urn:controlzex"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:UniBizBO.Views.V0.Page.UniSales.Code.CodeInfo.Brand"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:UniBizBO.Composition.Resource"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:vm="clr-namespace:UniBizBO.ViewModels.Page.UniSales.Code.CodeInfo.Brand"
             xmlns:wpf="clr-namespace:UniinfoNet.Windows.Wpf;assembly=UniinfoNet.Windows.Wpf"
             Style="{StaticResource App.UserControl.Page.Default}">
  <FrameworkElement.Resources>
    <ResourceDictionary Source="pack://application:,,,/UniBizBO;component/Views/V0/Page/PageCommon.xaml"/>
  </FrameworkElement.Resources>
  <Grid>
    <FrameworkElement.Resources>
      <wpf:BindingProxy x:Key="vm" Data="{Binding}"/>
    </FrameworkElement.Resources>
    <PopupEx FrameworkElement.Style="{StaticResource App.PopupEx.PopupMenu}"
             Popup.IsOpen="{Binding Source={StaticResource vm}, Path=Data.IsOpenExcelPopup}">
      <FrameworkElement.Resources>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
          <Setter Property="mah:VisibilityHelper.IsVisible"
                  Value="{Binding RelativeSource={RelativeSource self}, Path=Command.IsCanDisplay, FallbackValue=false}"/>
          <Setter Property="Control.Padding" Value="8"/>
          <Setter Property="Control.BorderThickness" Value="0"/>
        </Style>
      </FrameworkElement.Resources>
      <mah:ClipBorder Style="{StaticResource App.ClipBorder.PopupMenu.Space}">
        <StackPanel Orientation="Vertical">
          <Button Command="{Binding CmdExportExcel}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Excel.FullPath}"/>
              <TextBlock Text="출력"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdDownloadExcelSample.IsCanDisplay}"/>
          <Button Command="{Binding CmdDownloadExcelSample}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_DownLoad.FullPath}"/>
              <TextBlock Text="샘플 다운로드"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdDownloadExcelSample.IsCanDisplay}"/>
          <Button Command="{Binding CmdUploadExcelFile}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_UpLoad.FullPath}"/>
              <TextBlock Text="엑셀파일 업로드"/>
            </StackPanel>
          </Button>
        </StackPanel>
      </mah:ClipBorder>
    </PopupEx>
    <wpf:OverlayLayout Style="{DynamicResource App.OverlayLayout.Job.Page}" OverlayContent="{Binding Job}">
      <DockPanel>
        <ui:SimpleStackPanel DockPanel.Dock="Top" Orientation="Horizontal">
          <control:PageTitleControl/>
          <Button Style="{StaticResource Page.Button.Close}"/>
        </ui:SimpleStackPanel>
        <Border>
          <DockPanel>
            <DockPanel Style="{StaticResource Page.DockPanel.Search}">
              <wpf:FoldableBox DockPanel.Dock="Top" ExpandsCount="5">
                <DockPanel>
                  <wpf:AutoGrid AutoColumnsString=",*">
                    <control_combo:UseYnComboControl Width="80" wpf:FocusMoveHelper.Left="{Binding RelativeSource={RelativeSource self}}"
                                                     wpf:FocusMoveHelper.Right="{Binding ElementName=ctr_tb_keyword}" UseYn="{Binding Path=Param.Use}"/>
                    <TextBox x:Name="ctr_tb_keyword" Margin="12,0,0,0" mah:TextBoxHelper.SelectAllOnFocus="True"
                             mah:TextBoxHelper.Watermark="키워드:브랜드명" wpf:FocusHelper.IsSetFocusWhenLoad="True"
                             Style="{DynamicResource App.TextBox.Search}" wpf:FocusMoveHelper.Down="{Binding ElementName=Datas}"
                             Text="{Binding Param.Keyword, UpdateSourceTrigger=PropertyChanged}">
                      <UIElement.InputBindings>
                        <KeyBinding Key="Return" CommandParameter="Search" Command="{Binding CmdDefaultFunc}"/>
                      </UIElement.InputBindings>
                    </TextBox>
                  </wpf:AutoGrid>
                </DockPanel>
              </wpf:FoldableBox>
              <TextBlock Margin="42,0,0,4" FontWeight="Bold" Text="{Binding DisplaySearchCountDesc}"/>
            </DockPanel>
            <Border>
              <wpf:UniDataGrid x:Name="Datas" AutoGenerateColumns="False" CanUserEditGroupingView="False" IsReadOnly="True"
                               wpf:DataGridEventHelper.RowLeftDoubleClickCommand="{Binding CmdDataOpen}"
                               wpf:FocusMoveHelper.Down="{Binding RelativeSource={RelativeSource self}}"
                               wpf:FocusMoveHelper.Up="{Binding ElementName=ctr_tb_keyword}" DataView="{Binding DataView}"
                               ItemsSource="{Binding Datas}">
                <i:Interaction.Behaviors>
                  <wpf:UniDataGridViewerProxyBehavior Viewer="{Binding GridViewer, Mode=OneWayToSource}"/>
                  <wpf:UniDataGridDuplicatorProxyBehavior Duplicator="{Binding Duplicator, Mode=OneWayToSource}"/>
                  <wpf:UniDataGridExporterProxyBehavior Exporter="{Binding Exporter, Mode=OneWayToSource}"/>
                </i:Interaction.Behaviors>
                <FrameworkElement.Resources>
                  <Style x:Key="_Background" TargetType="{x:Type TextBlock}">
                    <Setter Property="FrameworkElement.Margin" Value="4,0"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding br_IsUseYn}" Value="false">
                        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Resources>
                <DataGrid.Columns>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.row_number}" wpf:UniDataGrid.ColumnKey="row_number"
                                      ElementStyle="{DynamicResource DataGridCellElement.Text.Right}"
                                      Binding="{Binding row_number, StringFormat={StaticResource NumberFormat.Number}}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[row_number]}"/>
                  <DataGridTemplateColumn Width="{StaticResource DataGridHeaderWidth.CodeName}" wpf:UniDataGrid.ColumnKey="br_BrandName"
                                          SortMemberPath="br_BrandName" ClipboardContentBinding="{Binding br_BrandName}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_BrandName]}">
                    <DataGridTemplateColumn.CellTemplate>
                      <DataTemplate>
                        <TextBlock Style="{StaticResource _Background}" Text="{Binding br_BrandName}"/>
                      </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                  </DataGridTemplateColumn>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.UseYnDesc}" wpf:UniDataGrid.ColumnKey="br_UseYn"
                                      ElementStyle="{StaticResource DataGridCellElement.Text.Center}" Binding="{Binding br_UseYnDesc}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_UseYn]}"/>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.MEMO}" wpf:UniDataGrid.ColumnKey="br_Memo"
                                      Binding="{Binding br_MemoEnterSkip}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_Memo]}"/>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.DATE}" wpf:UniDataGrid.ColumnKey="br_InDate"
                                      ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                      Binding="{Binding br_InDate, StringFormat={StaticResource DateTimeFormat.Date}}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_InDate]}"/>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.EmpName}" wpf:UniDataGrid.ColumnKey="br_InUser"
                                      ElementStyle="{StaticResource DataGridCellElement.Text.Center}" Binding="{Binding inEmpName}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_InUser]}"/>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.DATETIME}" wpf:UniDataGrid.ColumnKey="br_ModDate"
                                      ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                      Binding="{Binding ModDate, StringFormat={StaticResource DateTimeFormat.Default}}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_ModDate]}"/>
                  <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.EmpName}" wpf:UniDataGrid.ColumnKey="br_ModUser"
                                      ElementStyle="{StaticResource DataGridCellElement.Text.Center}" Binding="{Binding modEmpName}"
                                      Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[br_ModUser]}"/>
                </DataGrid.Columns>
              </wpf:UniDataGrid>
            </Border>
          </DockPanel>
        </Border>
      </DockPanel>
    </wpf:OverlayLayout>
  </Grid>
</UserControl>