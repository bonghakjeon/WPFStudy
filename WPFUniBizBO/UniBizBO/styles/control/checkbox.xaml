<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
  <Double x:Key="CheckBoxBorderThemeThickness">2</Double>
  <Double x:Key="CheckBoxCheckedStrokeThickness">0</Double>
  <mah:CornerRadiusFilterConverter x:Key="CornerRadiusTopLeftConverter" Filter="TopLeft"/>
  <mah:CornerRadiusFilterConverter x:Key="CornerRadiusBottomRightConverter" Filter="BottomRight"/>
  <Style x:Key="MahApps.Styles.CheckBox" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Background"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUnchecked}"/>
    <Setter Property="Control.BorderBrush"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUnchecked}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUnchecked}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.Padding" Value="6,0,0,0"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid VerticalAlignment="Center">
            <Border x:Name="RootBorder" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            <Grid Margin="{TemplateBinding Control.BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftCol" Width="Auto"/>
                <ColumnDefinition x:Name="RightCol" Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid x:Name="Check" Column="0" Width="{TemplateBinding mah:CheckBoxHelper.CheckSize}"
                    Height="{TemplateBinding mah:CheckBoxHelper.CheckSize}" HorizontalAlignment="Center"
                    VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                <Rectangle x:Name="NormalRectangle" Fill="{TemplateBinding mah:CheckBoxHelper.CheckBackgroundFillUnchecked}"
                           Stroke="{TemplateBinding mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked}"
                           StrokeThickness="{TemplateBinding mah:CheckBoxHelper.CheckStrokeThickness}"
                           UseLayoutRounding="False"
                           RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckCornerRadius), Mode=OneWay, Converter={StaticResource CornerRadiusTopLeftConverter}}"
                           RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckCornerRadius), Mode=OneWay, Converter={StaticResource CornerRadiusBottomRightConverter}}"/>
                <ContentControl x:Name="CheckGlyph" Content="{TemplateBinding mah:CheckBoxHelper.CheckGlyphUnchecked}"
                                ContentTemplate="{TemplateBinding mah:CheckBoxHelper.CheckGlyphUncheckedTemplate}"
                                Focusable="False" Foreground="{TemplateBinding mah:CheckBoxHelper.CheckGlyphForegroundUnchecked}"
                                IsTabStop="False"/>
              </Grid>
              <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" Margin="{TemplateBinding Control.Padding}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Content="{TemplateBinding ContentControl.Content}"
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                <Condition Property="UIElement.IsMouseOver" Value="False"/>
                <Condition Property="ButtonBase.IsPressed" Value="False"/>
                <Condition Property="UIElement.IsEnabled" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUnchecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUncheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundUnchecked)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundUnchecked)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillUnchecked)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundUnchecked)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushUnchecked)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                <Condition Property="UIElement.IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUnchecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUncheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundUncheckedMouseOver)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundUncheckedMouseOver)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundUncheckedMouseOver)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushUncheckedMouseOver)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                <Condition Property="ButtonBase.IsPressed" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUnchecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUncheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundUncheckedPressed)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundUncheckedPressed)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillUncheckedPressed)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedPressed)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundUncheckedPressed)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushUncheckedPressed)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="False"/>
                <Condition Property="UIElement.IsEnabled" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUnchecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphUncheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundUncheckedDisabled)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundUncheckedDisabled)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedDisabled)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundUncheckedDisabled)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushUncheckedDisabled)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsMouseOver" Value="False"/>
                <Condition Property="ButtonBase.IsPressed" Value="False"/>
                <Condition Property="UIElement.IsEnabled" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphChecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphCheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundChecked)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundChecked)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillChecked)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeChecked)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundChecked)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushChecked)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphChecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphCheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundCheckedMouseOver)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillCheckedMouseOver)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeCheckedMouseOver)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundCheckedMouseOver)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushCheckedMouseOver)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="ButtonBase.IsPressed" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphChecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphCheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundCheckedPressed)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillCheckedPressed)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeCheckedPressed)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundCheckedPressed)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushCheckedPressed)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
                <Condition Property="UIElement.IsEnabled" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphChecked)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphCheckedTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundCheckedDisabled)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundCheckedDisabled)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillCheckedDisabled)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeCheckedDisabled)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundCheckedDisabled)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushCheckedDisabled)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                <Condition Property="UIElement.IsMouseOver" Value="False"/>
                <Condition Property="ButtonBase.IsPressed" Value="False"/>
                <Condition Property="UIElement.IsEnabled" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminate)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundIndeterminate)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundIndeterminate)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillIndeterminate)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminate)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundIndeterminate)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushIndeterminate)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                <Condition Property="UIElement.IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminate)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundIndeterminateMouseOver)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundIndeterminateMouseOver)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillIndeterminateMouseOver)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminateMouseOver)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundIndeterminateMouseOver)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushIndeterminateMouseOver)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                <Condition Property="ButtonBase.IsPressed" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminate)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundIndeterminatePressed)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundIndeterminatePressed)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillIndeterminatePressed)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminatePressed)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundIndeterminatePressed)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushIndeterminatePressed)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Value="{x:Null}" Property="ToggleButton.IsChecked"/>
                <Condition Property="UIElement.IsEnabled" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminate)}"
                      Property="ContentControl.Content"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphIndeterminateTemplate)}"
                      Property="ContentControl.ContentTemplate"/>
              <Setter TargetName="CheckGlyph"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckGlyphForegroundIndeterminateDisabled)}"
                      Property="Control.Foreground"/>
              <Setter TargetName="CheckGlyph" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="ContentPresenter"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.ForegroundIndeterminateDisabled)}"
                      Property="TextElement.Foreground"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundFillIndeterminateDisabled)}"
                      Property="Shape.Fill"/>
              <Setter TargetName="NormalRectangle"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminateDisabled)}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BackgroundIndeterminateDisabled)}"
                      Property="Border.Background"/>
              <Setter TargetName="RootBorder"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:CheckBoxHelper.BorderBrushIndeterminateDisabled)}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <Trigger Property="FrameworkElement.FlowDirection" Value="RightToLeft">
              <Setter TargetName="Check" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="-1"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="mah:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
              <Setter TargetName="Check" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPresenter" Property="Grid.Column" Value="0"/>
              <Setter TargetName="LeftCol" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="RightCol" Property="ColumnDefinition.Width" Value="Auto"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundChecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundChecked}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundCheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundIndeterminate"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminate}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminateDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminateMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundIndeterminatePressed}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundUnchecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUnchecked}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BackgroundUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BackgroundUncheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushChecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushChecked}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushCheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushIndeterminate"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminate}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminateDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminateMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushIndeterminatePressed}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushUnchecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUnchecked}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.BorderBrushUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.BorderBrushUncheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillChecked"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillIndeterminate"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUnchecked"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundFillUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeChecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminate"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.MouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphCheckedTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="12" Height="10"
                Data="M 1145.60717773438,430 C 1145.60717773438,430 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1138,434.553833007813 1138,434.553833007813 1138,434.553833007813 1141.48217773438,438 1141.48217773438,438 1141.48217773438,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.60717773438,430 1145.60717773438,430 Z"
                Stretch="Fill" UseLayoutRounding="False"
                Fill="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked"
            Value="{DynamicResource MahApps.Brushes.Highlight}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.Accent}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.Highlight}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.Highlight}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundIndeterminate"
            Value="{DynamicResource MahApps.Brushes.Gray3}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.Gray3}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.Gray2}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.Gray2}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundUnchecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUnchecked}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.CheckGlyphForegroundUncheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphIndeterminateTemplate">
      <Setter.Value>
        <DataTemplate>
          <Rectangle Width="8" Height="3" UseLayoutRounding="False"
                     Fill="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="mah:CheckBoxHelper.ForegroundChecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundChecked}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundCheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundCheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundCheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundCheckedPressed}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundIndeterminate"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminate}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundIndeterminateDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminateDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundIndeterminateMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminateMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundIndeterminatePressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundIndeterminatePressed}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundUnchecked"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUnchecked}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundUncheckedDisabled"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedDisabled}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundUncheckedMouseOver"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedMouseOver}"/>
    <Setter Property="mah:CheckBoxHelper.ForegroundUncheckedPressed"
            Value="{DynamicResource MahApps.Brushes.CheckBox.ForegroundUncheckedPressed}"/>
    <Style.Triggers>
      <Trigger Property="mah:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
        <Setter Property="Control.HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Control.Padding" Value="0,0,6,0"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="App.CheckBox" BasedOn="{StaticResource MahApps.Styles.CheckBox}"
         TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="FrameworkElement.MinHeight" Value="24"/>
    <Setter Property="FrameworkElement.Margin" Value="1"/>
    <Setter Property="mah:CheckBoxHelper.CheckSize" Value="15"/>
    <Setter Property="mah:CheckBoxHelper.CheckBackgroundStrokeUnchecked"
            Value="{DynamicResource App.Brush.Background.D7}"/>
    <Setter Property="mah:CheckBoxHelper.CheckStrokeThickness" Value="1"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundChecked"
            Value="{DynamicResource App.Brush.Accent}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedMouseOver"
            Value="{DynamicResource App.Brush.Accent.D1}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphForegroundCheckedPressed"
            Value="{DynamicResource App.Brush.Accent.D2}"/>
    <Setter Property="mah:CheckBoxHelper.CheckGlyphCheckedTemplate">
      <Setter.Value>
        <DataTemplate>
          <Path Width="9" Height="9" Margin="0,0,0,0" Data="M 28,58.8 L 55.5,86.3 100,41.8 " Stretch="Uniform"
                StrokeEndLineCap="Triangle" StrokeLineJoin="Round" StrokeStartLineCap="Triangle"
                StrokeThickness="2" UseLayoutRounding="True"
                Stroke="{Binding RelativeSource={RelativeSource AncestorType=ContentControl}, Path=Foreground}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource App.CheckBox}" TargetType="{x:Type CheckBox}"/>
  <Style x:Key="App.CheckBox.Search" BasedOn="{StaticResource App.CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="FrameworkElement.Margin" Value="6,3,1,3"/>
  </Style>
  <Style x:Key="App.CheckBox.SearchControl.Search" BasedOn="{StaticResource App.CheckBox}"
         TargetType="{x:Type CheckBox}">
    <Setter Property="FrameworkElement.Margin" Value="0,0,3,0"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="FrameworkElement.FlowDirection" Value="LeftToRight"/>
  </Style>
</ResourceDictionary>