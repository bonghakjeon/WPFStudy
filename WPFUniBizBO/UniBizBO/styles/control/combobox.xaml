<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:behaviors="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:conv="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
  <Style x:Key="MahApps.Styles.ComboBox" TargetType="{x:Type ComboBox}">
    <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}"/>
    <Setter Property="Control.BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}"/>
    <Setter Property="mah:ControlsHelper.FocusBorderBrush"
            Value="{DynamicResource MahApps.Brushes.ComboBox.Border.Focus}"/>
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush"
            Value="{DynamicResource MahApps.Brushes.ComboBox.Border.MouseOver}"/>
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.MinHeight" Value="26"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <Border x:Name="Border" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            <Grid Margin="{TemplateBinding Control.BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                <ColumnDefinition x:Name="ButtonColumn"
                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay}"/>
                <ColumnDefinition x:Name="ToggleButtonColumn"
                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonWidth), Mode=OneWay}"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="ButtonRow" Height="*"/>
              </Grid.RowDefinitions>
              <ToggleButton x:Name="PART_DropDownToggle" Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="0"
                            VerticalAlignment="Stretch"
                            mah:ControlsHelper.CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                            mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                            mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                            mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                            mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                            mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                            Background="Transparent" BorderThickness="0" Foreground="{TemplateBinding Control.Foreground}"
                            KeyboardNavigation.IsTabStop="False"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            Style="{DynamicResource MahApps.Styles.ToggleButton.ComboBoxDropDown}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Grid x:Name="ContentSite" Row="1" Column="0" Margin="1,0">
                <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
              <TextBox x:Name="PART_EditableTextBox" Grid.Row="1" Grid.Column="0" Margin="0"
                       Padding="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch"
                       VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                       mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                       mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                       mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                       mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                       mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}"
                       mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}"
                       mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                       mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                       mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                       BorderThickness="0" Focusable="True" FontFamily="{TemplateBinding Control.FontFamily}"
                       FontSize="{TemplateBinding Control.FontSize}" Foreground="{TemplateBinding Control.Foreground}"
                       IsReadOnly="{TemplateBinding ComboBox.IsReadOnly}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                       Style="{StaticResource MahApps.Styles.TextBox.ComboBox.Editable}" Visibility="Collapsed"
                       Background="{x:Null}"
                       CharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ComboBoxHelper.CharacterCasing), Mode=OneWay}"
                       MaxLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ComboBoxHelper.MaxLength), Mode=OneWay}"/>
              <TextBlock x:Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="4,0"
                         Padding="{TemplateBinding Control.Padding}"
                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                         Foreground="{TemplateBinding Control.Foreground}"
                         Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                         Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                         TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                         TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed"/>
              <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Margin="4,0"
                              Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                <FrameworkElement.Height>
                  <MultiBinding Converter="{mah:MathMultiplyConverter}">
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                  </MultiBinding>
                </FrameworkElement.Height>
                <TextBlock x:Name="PART_FloatingMessage"
                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                           Foreground="{TemplateBinding Control.Foreground}"
                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                  <UIElement.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding Converter="{mah:MathSubtractConverter}">
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </UIElement.RenderTransform>
                </TextBlock>
              </ContentControl>
            </Grid>
            <Border x:Name="DisabledVisualElement" Grid.ColumnSpan="3"
                    Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                    BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False"
                    Opacity="0.6" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    Visibility="Collapsed"/>
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}">
                <Border x:Name="PopupBorder" Height="Auto" HorizontalAlignment="Stretch"
                        Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                        BorderBrush="{DynamicResource MahApps.Brushes.ComboBox.PopupBorder}"
                        BorderThickness="{DynamicResource ComboBoxPopupBorderThemeThickness}"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <ScrollViewer Padding="{DynamicResource ComboBoxPopupBorderThemePadding}" BorderThickness="0">
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Popup>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused"/>
                <VisualState x:Name="Unfocused"/>
                <VisualState x:Name="FocusedDropDown">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)"
                                                   Duration="00:00:00">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <ObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </ObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ContextMenu, Converter={x:Static mah:IsNullConverter.Instance}}"
                           Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_EditableTextBox"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                      Property="FrameworkElement.ContextMenu"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                           Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocusWithin}" Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.EnterGotFocus}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ExitGotFocus}"/>
              </TriggerBase.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                           Value="False"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.EnterHasText}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ExitHasText}"/>
              </TriggerBase.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}"
                           Value="True"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditable}" Value="False"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem, Mode=OneWay, Converter={x:Static mah:IsNullConverter.Instance}}"
                           Value="False"/>
              </MultiDataTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ShowFloatingMessage}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.HideFloatingMessage}"/>
              </TriggerBase.ExitActions>
            </MultiDataTrigger>
            <DataTrigger Value="False"
                         Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}">
              <Setter TargetName="ContentSite" Property="Grid.ColumnSpan" Value="2"/>
              <Setter TargetName="PART_EditableTextBox" Property="Grid.ColumnSpan" Value="2"/>
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2"/>
            </DataTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_DropDownToggle" Value="{x:Null}" Property="Control.Background"/>
              <Setter TargetName="PART_DropDownToggle" Property="UIElement.Focusable" Value="False"/>
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ComboBox.IsEditable" Value="False"/>
                <Condition Property="UIElement.IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource MahApps.Brushes.Gray9}" Property="Control.Background"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Border"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Border"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Border"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_FloatingMessage"
                      Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" Property="TextBlock.Foreground"/>
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Border"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping" Value="true"/>
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel IsItemsHost="True" IsVirtualizing="True" IsVirtualizingWhenGrouping="True"
                                      VirtualizationMode="Recycling"/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="App.ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}"
         TargetType="{x:Type ComboBox}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="24"/>
    <Setter Property="Control.Padding" Value="3,1"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
  </Style>
  <Style BasedOn="{StaticResource App.ComboBox}" TargetType="{x:Type ComboBox}"/>
  <Style x:Key="App.ComboBox.Search" BasedOn="{StaticResource App.ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.MinHeight" Value="24"/>
  </Style>
</ResourceDictionary>