<UserControl x:Class="UniBizBO.Views.V0.Page.UniSales.Systems.Program.ProgMenu.ProgMenuListPageV"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:boconverter="clr-namespace:UniBiz.Bo.Models.Converter;assembly=UniBiz.Bo.Models"
             xmlns:boprogmenu="clr-namespace:UniBiz.Bo.Models.UniBase.ProgMenuInfo.ProgMenu;assembly=UniBiz.Bo.Models"
             xmlns:control="clr-namespace:UniBizBO.Controls"
             xmlns:control_combo="clr-namespace:UniBizBO.Controls.ComboBox"
             xmlns:converter="clr-namespace:UniBizBO.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ex="urn:controlzex"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:UniBizBO.Views.V0.Page.UniSales.Systems.Program.ProgMenu"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:UniBizBO.Composition.Resource"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:vm="clr-namespace:UniBizBO.ViewModels.Page.UniSales.Systems.Program.ProgMenu"
             xmlns:wpf="clr-namespace:UniinfoNet.Windows.Wpf;assembly=UniinfoNet.Windows.Wpf"
             x:Name="root" Style="{StaticResource App.UserControl.Page.Default}">
  <FrameworkElement.Resources>
    <ResourceDictionary Source="pack://application:,,,/UniBizBO;component/Views/V0/Page/PageCommon.xaml"/>
  </FrameworkElement.Resources>
  <Grid>
    <FrameworkElement.Resources>
      <wpf:BindingProxy x:Key="vm" Data="{Binding}"/>
    </FrameworkElement.Resources>
    <PopupEx FrameworkElement.Style="{StaticResource App.PopupEx.PopupMenu}"
             Popup.IsOpen="{Binding Source={StaticResource vm}, Path=Data.IsOpenExcelPopup}">
      <FrameworkElement.Resources>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
          <Setter Property="mah:VisibilityHelper.IsVisible"
                  Value="{Binding RelativeSource={RelativeSource self}, Path=Command.IsCanDisplay, FallbackValue=false}"/>
          <Setter Property="Control.Padding" Value="8"/>
          <Setter Property="Control.BorderThickness" Value="0"/>
        </Style>
      </FrameworkElement.Resources>
      <mah:ClipBorder Style="{StaticResource App.ClipBorder.PopupMenu.Space}">
        <StackPanel Orientation="Vertical">
          <Button Command="{Binding CmdExportExcel}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Excel.FullPath}"/>
              <TextBlock Text="출력"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdDownloadExcelSample.IsCanDisplay}"/>
          <Button Command="{Binding CmdDownloadExcelSample}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_DownLoad.FullPath}"/>
              <TextBlock Text="샘플 다운로드"/>
            </StackPanel>
          </Button>
          <Border Style="{DynamicResource App.Border.PopupMenu.Separator}"
                  mah:VisibilityHelper.IsVisible="{Binding CmdDownloadExcelSample.IsCanDisplay}"/>
          <Button Command="{Binding CmdUploadExcelFile}">
            <StackPanel Orientation="Horizontal">
              <Image Style="{StaticResource App.Image.Icon}"
                     Source="{Binding Source={x:Static res:Icons.Default}, Path=Common_Button_UpLoad.FullPath}"/>
              <TextBlock Text="엑셀파일 업로드"/>
            </StackPanel>
          </Button>
        </StackPanel>
      </mah:ClipBorder>
    </PopupEx>
    <control:DataHeaderDebugControl Panel.ZIndex="100" DataContext="{Binding}"/>
    <wpf:OverlayLayout Style="{DynamicResource App.OverlayLayout.Job.Page}" OverlayContent="{Binding Job}">
      <DockPanel>
        <ui:SimpleStackPanel DockPanel.Dock="Top" Orientation="Horizontal">
          <control:PageTitleControl/>
          <Button Style="{StaticResource Page.Button.Close}"/>
        </ui:SimpleStackPanel>
        <Border>
          <DockPanel>
            <DockPanel Style="{StaticResource Page.DockPanel.Search}">
              <wpf:FoldableBox DockPanel.Dock="Top" ExpandsCount="1">
                <DockPanel>
                  <wpf:AutoGrid AutoColumnsString=",,*">
                    <control_combo:UseYnComboControl x:Name="Use" Width="80" wpf:FocusMoveHelper.Left="{Binding RelativeSource={RelativeSource self}}"
                                                     wpf:FocusMoveHelper.Right="{Binding ElementName=AppType}" UseYn="{Binding Path=Param.Use}"/>
                    <ComboBox x:Name="AppType" Width="150" Margin="12,0,0,0" DisplayMemberPath="comm_TypeNoMemo"
                              IsReadOnly="True" Style="{DynamicResource App.ComboBox.Search}"
                              wpf:FocusMoveHelper.Left="{Binding ElementName=Use}"
                              wpf:FocusMoveHelper.Right="{Binding ElementName=ctr_tb_keyword}"
                              ItemsSource="{Binding App.Sys.CommonCodes, Converter={x:Static converter:CommonCodeGroupConverter.Instance}, ConverterParameter={x:Static boconverter:CommonCodeTypes.AppType}}"
                              SelectedItem="{Binding Param.AppType}"/>
                    <TextBox x:Name="ctr_tb_keyword" Grid.ColumnSpan="2" Margin="12,0,0,0"
                             mah:TextBoxHelper.SelectAllOnFocus="True" mah:TextBoxHelper.Watermark="키워드:타이틀명,모듈명,메뉴명"
                             wpf:FocusHelper.IsSetFocusWhenIsVisible="True" wpf:FocusHelper.IsSetFocusWhenLoad="True"
                             Style="{DynamicResource App.TextBox.Search}" wpf:FocusMoveHelper.Down="{Binding ElementName=Datas}"
                             wpf:FocusMoveHelper.Left="{Binding ElementName=AppType}"
                             wpf:FocusMoveHelper.Right="{Binding RelativeSource={RelativeSource self}}"
                             Text="{Binding Param.Keyword, UpdateSourceTrigger=PropertyChanged}">
                      <UIElement.InputBindings>
                        <KeyBinding Key="Return" CommandParameter="Search" Command="{Binding CmdDefaultFunc}"/>
                      </UIElement.InputBindings>
                    </TextBox>
                  </wpf:AutoGrid>
                </DockPanel>
              </wpf:FoldableBox>
              <TextBlock Margin="42,0,0,4" FontWeight="Bold" Text="{Binding DisplaySearchCountDesc}"/>
            </DockPanel>
            <Border>
              <DockPanel LastChildFill="True">
                <Border Width="300" DockPanel.Dock="Right" Style="{DynamicResource App.TreeView.Border}">
                  <TreeView Name="GroupView" Style="{DynamicResource App.TreeView}" ItemsSource="{Binding DepthDatas}">
                    <ItemsControl.ItemContainerStyle>
                      <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="TreeViewItem.IsExpanded" Value="False"/>
                      </Style>
                    </ItemsControl.ItemContainerStyle>
                    <FrameworkElement.Resources>
                      <HierarchicalDataTemplate x:Key="{DataTemplateKey {x:Type boprogmenu:ProgMenuView}}"
                                                DataType="{x:Type boprogmenu:ProgMenuView}" ItemsSource="{Binding Lt_Detail}">
                        <StackPanel Orientation="Horizontal">
                          <Image Margin="4,2" Style="{DynamicResource App.Image.Icon}"
                                 Source="{Binding pm_IconUrl, Converter={x:Static converter:IconPathConverter.Instance}}"/>
                          <TextBlock VerticalAlignment="Center" Text="{Binding pm_MenuName}"/>
                          <TextBlock VerticalAlignment="Center" Text=" /"/>
                          <Button Style="{DynamicResource App.Button.Transparent}"
                                  Command="{Binding Source={StaticResource vm}, Path=Data.CmdViewDataOpen}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=DataContext}">
                            <TextBlock Foreground="Blue" Text="{Binding pm_ProgTitle}"/>
                          </Button>
                        </StackPanel>
                      </HierarchicalDataTemplate>
                    </FrameworkElement.Resources>
                  </TreeView>
                </Border>
                <Border>
                  <wpf:UniDataGrid x:Name="Datas" wpf:FocusMoveHelper.FocusedMoveOnPassAction="TryChildrenCurrent"
                                   AutoGenerateColumns="False" IsReadOnly="True"
                                   wpf:DataGridEventHelper.RowLeftDoubleClickCommand="{Binding CmdDataOpen}"
                                   wpf:FocusMoveHelper.Down="{Binding RelativeSource={RelativeSource self}}"
                                   wpf:FocusMoveHelper.Up="{Binding ElementName=ctr_tb_keyword}" DataView="{Binding DataView}"
                                   ItemsSource="{Binding Datas}">
                    <i:Interaction.Behaviors>
                      <wpf:TextPasteBehavior Key="a" Receiver="{Binding}"/>
                      <wpf:UniDataGridViewerProxyBehavior Viewer="{Binding GridViewer, Mode=OneWayToSource}"/>
                      <wpf:UniDataGridDuplicatorProxyBehavior Duplicator="{Binding Duplicator, Mode=OneWayToSource}"/>
                      <wpf:UniDataGridExporterProxyBehavior Exporter="{Binding Exporter, Mode=OneWayToSource}"/>
                    </i:Interaction.Behaviors>
                    <DataGrid.Columns>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.row_number}" wpf:UniDataGrid.ColumnKey="row_number"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Right}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Right}"
                                          Binding="{Binding row_number, StringFormat={StaticResource NumberFormat.Number}}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[row_number]}"/>
                      <DataGridComboBoxColumn Width="{StaticResource DataGridHeaderWidth.pm_MenuDepth}" wpf:UniDataGrid.ColumnKey="pm_MenuDepth"
                                              DisplayMemberPath="comm_TypeNoMemo" SelectedValuePath="comm_TypeNo"
                                              ClipboardContentBinding="{Binding pm_MenuDepthDesc}"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuDepth]}"
                                              ItemsSource="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuDepth].CTypeGroup}"
                                              SelectedValueBinding="{Binding pm_MenuDepth}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuDepth].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.pm_MenuSortNo}"
                                          wpf:UniDataGrid.ColumnKey="pm_MenuSortNo"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Center}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Center}"
                                          Binding="{Binding pm_MenuSortNo}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuSortNo]}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.pm_ProgTitle}" wpf:UniDataGrid.ColumnKey="pm_ProgTitle"
                                          Binding="{Binding pm_ProgTitle}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ProgTitle]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ProgTitle].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.pm_MenuName}" wpf:UniDataGrid.ColumnKey="pm_MenuName"
                                          Binding="{Binding pm_MenuName}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuName]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_MenuName].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.pm_GroupID}" wpf:UniDataGrid.ColumnKey="pm_GroupID"
                                          ElementStyle="{DynamicResource DataGridCellElement.Text.Right}"
                                          Binding="{Binding pm_GroupID, StringFormat={StaticResource NumberFormat.Number}}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_GroupID]}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.pm_ProgID}" wpf:UniDataGrid.ColumnKey="pm_ProgID"
                                          Binding="{Binding pm_ProgID}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ProgID]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ProgID].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridComboBoxColumn Width="{StaticResource DataGridHeaderWidth.pm_ViewType}" wpf:UniDataGrid.ColumnKey="pm_ViewType"
                                              DisplayMemberPath="comm_TypeNoMemo" SelectedValuePath="comm_TypeNo"
                                              ClipboardContentBinding="{Binding pm_ViewTypeDesc}"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ViewType]}"
                                              ItemsSource="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ViewType].CTypeGroup}"
                                              SelectedValueBinding="{Binding pm_ViewType}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ViewType].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTemplateColumn wpf:UniDataGrid.ColumnKey="pm_IconUrl"
                                              Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_IconUrl]}"
                                              Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_IconUrl].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}">
                        <DataGridTemplateColumn.CellTemplate>
                          <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                              <Image Margin="3,0" Style="{DynamicResource App.Image.Icon}"
                                     Source="{Binding pm_IconUrl, Converter={x:Static converter:IconPathConverter.Instance}}"/>
                              <TextBlock Text="{Binding pm_IconUrl}"/>
                            </StackPanel>
                          </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                      </DataGridTemplateColumn>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.UseYnDesc}" wpf:UniDataGrid.ColumnKey="pm_UseYn"
                                          ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Center}"
                                          Binding="{Binding pm_UseYnDesc}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_UseYn]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_UseYn].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.DATE}" wpf:UniDataGrid.ColumnKey="pm_InDate"
                                          ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Center}"
                                          Binding="{Binding pm_InDate, StringFormat={StaticResource DateTimeFormat.Date}}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_InDate]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_InDate].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.EmpName}" wpf:UniDataGrid.ColumnKey="inEmpName"
                                          ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Center}"
                                          Binding="{Binding inEmpName}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[inEmpName]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[inEmpName].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.DATETIME}" wpf:UniDataGrid.ColumnKey="pm_ModDate"
                                          ElementStyle="{StaticResource DataGridCellElement.Text.Center}"
                                          HeaderTemplate="{StaticResource _DataTemplate.DataGridColumnHeader.Center}"
                                          Binding="{Binding ModDate, StringFormat={StaticResource DateTimeFormat.Default}}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ModDate]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[pm_ModDate].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                      <DataGridTextColumn Width="{StaticResource DataGridHeaderWidth.EmpName}" wpf:UniDataGrid.ColumnKey="modEmpName"
                                          ElementStyle="{StaticResource DataGridCellElement.Text.Center}" Binding="{Binding modEmpName}"
                                          Header="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[modEmpName]}"
                                          Visibility="{Binding Source={StaticResource vm}, Path=Data.DataHeaders[modEmpName].IsVisible, Converter={x:Static wpf:BoolToVisibilityConverter.Instance}}"/>
                    </DataGrid.Columns>
                  </wpf:UniDataGrid>
                </Border>
              </DockPanel>
            </Border>
          </DockPanel>
        </Border>
      </DockPanel>
    </wpf:OverlayLayout>
  </Grid>
</UserControl>