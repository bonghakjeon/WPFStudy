<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:behaviors="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:conv="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls">
  <Style x:Key="MahApps.Styles.TextBox" TargetType="{x:Type TextBox}">
    <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Control.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}"/>
    <Setter Property="mah:ControlsHelper.FocusBorderBrush"
            Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}"/>
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush"
            Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}"/>
    <Setter Property="mah:TextBoxHelper.ButtonFontSize"
            Value="{DynamicResource MahApps.Font.Size.Button.ClearText}"/>
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22"/>
    <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True"/>
    <Setter Property="mah:TextBoxHelper.IsSpellCheckContextMenuEnabled"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}"/>
    <Setter Property="mah:TextBoxHelper.WatermarkWrapping"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="26"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource MahApps.Brushes.Highlight}"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Grid>
            <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
              <Border x:Name="PART_WaitingForDataEffectGrid" Background="{TemplateBinding Control.Background}"
                      BorderBrush="Transparent" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                      Effect="{DynamicResource MahApps.DropShadowEffect.WaitingForData}"
                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </AdornerDecorator>
            <Border x:Name="Base" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding Control.BorderThickness}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="ButtonRow" Height="*"/>
              </Grid.RowDefinitions>
              <ScrollViewer x:Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="0"
                            Padding="{TemplateBinding Control.Padding}" VerticalAlignment="Stretch" BorderThickness="0"
                            IsTabStop="False" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                            Background="{x:Null}"/>
              <TextBlock x:Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="4,0"
                         Padding="{TemplateBinding Control.Padding}"
                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                         Foreground="{TemplateBinding Control.Foreground}"
                         Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                         Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                         TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                         TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                         TextWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}" Visibility="Collapsed"/>
              <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Row="0" Grid.Column="0" Margin="4,0"
                              Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                <FrameworkElement.Height>
                  <MultiBinding Converter="{mah:MathMultiplyConverter}">
                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                  </MultiBinding>
                </FrameworkElement.Height>
                <TextBlock x:Name="PART_FloatingMessage"
                           HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                           VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                           Foreground="{TemplateBinding Control.Foreground}"
                           Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                           Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                           TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                           TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                  <UIElement.RenderTransform>
                    <TranslateTransform x:Name="FloatingMessageTransform">
                      <TranslateTransform.Y>
                        <MultiBinding Converter="{mah:MathSubtractConverter}">
                          <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                          <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                        </MultiBinding>
                      </TranslateTransform.Y>
                    </TranslateTransform>
                  </UIElement.RenderTransform>
                </TextBlock>
              </ContentControl>
              <Button x:Name="PART_ClearText" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                      Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                      Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                      ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}" Focusable="False"
                      FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                      FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                      Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False"
                      Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                      mah:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}"
                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
            <Border x:Name="DisabledVisualElement" Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                    BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}" IsHitTestVisible="False"
                    Opacity="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left"
                         Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0"/>
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1"/>
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="1"/>
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto"/>
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}"
                           Value="True"/>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}"
                           Value="True"/>
              </MultiDataTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ShowFloatingMessage}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.HideFloatingMessage}"/>
              </TriggerBase.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}"
                           Value="Right"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}"
                           Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2"/>
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6"/>
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="True">
              <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base"
                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_FloatingMessage"
                      Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" Property="TextBlock.Foreground"/>
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource MahApps.Brushes.Gray8}"
                      Property="Control.Background"/>
              <Setter TargetName="PART_ClearText" Value="{DynamicResource MahApps.Brushes.Accent}"
                      Property="Control.Foreground"/>
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"
                      Property="Control.Background"/>
              <Setter TargetName="PART_ClearText" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"
                      Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="mah:TextBoxHelper.HasText" Value="False"/>
                <Condition Property="UIElement.IsFocused" Value="True"/>
              </MultiTrigger.Conditions>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.EnterGotFocus}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ExitGotFocus}"/>
              </TriggerBase.ExitActions>
            </MultiTrigger>
            <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.EnterHasText}"/>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.ExitHasText}"/>
              </TriggerBase.ExitActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsVisible" Value="True"/>
                <Condition Property="mah:TextBoxHelper.IsWaitingForData" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility"
                      Value="Visible"/>
              <TriggerBase.EnterActions>
                <BeginStoryboard Storyboard="{DynamicResource MahApps.Storyboard.WaitingForData}"/>
              </TriggerBase.EnterActions>
            </MultiTrigger>
            <Trigger Property="mah:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="PART_WaitingForDataEffectAdornerDecorator" Property="UIElement.Visibility"
                      Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}"/>
  </Style>
  <Style x:Key="App.TextBox" BasedOn="{StaticResource MahApps.Styles.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
    <Setter Property="Control.Padding" Value="3,1"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="12"/>
    <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="16"/>
  </Style>
  <Style x:Key="App.TextBox.MultiLine" BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="TextBoxBase.AcceptsReturn" Value="True"/>
    <Setter Property="TextBox.TextWrapping" Value="Wrap"/>
    <Setter Property="TextBoxBase.VerticalScrollBarVisibility" Value="Auto"/>
  </Style>
  <Style BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}"/>
  <Style x:Key="App.TextBox.UniDataGridCell" BasedOn="{StaticResource App.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
  </Style>
  <Style x:Key="App.TextBox.Center" BasedOn="{StaticResource MahApps.Styles.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="TextBox.TextAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="3,1"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
  </Style>
  <Style x:Key="App.TextBox.Right" BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="TextBox.TextAlignment" Value="Right"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="3,1"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
  </Style>
  <Style x:Key="App.TextBox.Readonly" BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.MinHeight" Value="10"/>
    <Setter Property="TextBoxBase.IsReadOnly" Value="True"/>
  </Style>
  <Style x:Key="App.TextBox.Readonly.Center" BasedOn="{StaticResource App.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="TextBox.TextAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.MinHeight" Value="10"/>
    <Setter Property="TextBoxBase.IsReadOnly" Value="True"/>
  </Style>
  <Style x:Key="App.TextBox.Readonly.Right" BasedOn="{StaticResource App.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="TextBox.TextAlignment" Value="Right"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.MinHeight" Value="10"/>
    <Setter Property="TextBoxBase.IsReadOnly" Value="True"/>
  </Style>
  <Style x:Key="App.TextBox.Search" BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="24"/>
    <Setter Property="mah:TextBoxHelper.ClearTextButton" Value="True"/>
  </Style>
  <Style x:Key="App.TextBox.SearchControl.Search" BasedOn="{StaticResource App.TextBox}"
         TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="24"/>
  </Style>
  <Style x:Key="App.TextBox.Disabled" BasedOn="{StaticResource App.TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="Control.Background" Value="{DynamicResource MahApps.Brushes.Gray7}"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}"/>
    <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Gray3}"/>
  </Style>
  <Style x:Key="App.TextBox.Disabled.Center" BasedOn="{StaticResource App.TextBox.Disabled}"
         TargetType="{x:Type TextBox}">
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="TextBox.TextAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Padding" Value="3,1"/>
    <Setter Property="FrameworkElement.Margin" Value="3"/>
  </Style>
</ResourceDictionary>